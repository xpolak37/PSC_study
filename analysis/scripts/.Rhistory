panel.grid = element_blank()) +
ylim(dys_min_limit,dys_limit) +
scale_fill_manual(values=c("#A06A2C", "#B2182B")) +
scale_color_manual(values=c("#A06A2C", "#B2182B")) +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5))
p_il_dys_genus_ibd
pdf("../figures/clinical/MDI_terminal_ileum_ibd.pdf",
height =5,width = 3)
p_il_dys_genus_ibd
dev.off()
colon_metadata_melted <- melt(metadata_colon %>%
dplyr::select("Group",
"dys_unfiltered_asv",
"dys_unfiltered_genus",
"dys_filtered_asv",
"dys_filtered_genus"))
p_col <- ggplot(colon_metadata_melted) +
geom_boxplot(aes(x=Group, y=value),outliers = FALSE) +
geom_jitter(width = 0.2,height = 0,
aes(x=Group, y=value, color=Group),
size=2) +
facet_wrap(~variable, ncol = 4,scales = "free") +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0)) +
scale_fill_manual(values=c("#309f87","#f9c675","#F08080","#A00000")) +
scale_color_manual(values=c("#309f87","#f9c675","#F08080","#A00000"))
p_col
metadata_colon_melted <- melt(metadata_colon %>%
dplyr::filter(PSC_IBD %in% c(0,1)) %>%
dplyr::select("PSC_IBD",
"dys_unfiltered_asv",
"dys_unfiltered_genus",
"dys_filtered_asv",
"dys_filtered_genus"))
p_col <- ggplot(metadata_colon_melted) +
geom_boxplot(aes(x=PSC_IBD, y=value),outliers = FALSE) +
geom_jitter(width = 0.2,height = 0,aes(x=PSC_IBD, y=value, color=PSC_IBD),
size=2) +
facet_wrap(~variable, ncol = 4,scales = "free") +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0),
axis.ticks.x = element_line(size=0.3,color = "black"),
axis.ticks.y = element_line(size=0.3,color="black"),
axis.ticks.length = unit(4,"pt"),
panel.grid = element_blank()) +
scale_fill_manual(values=c("#A06A2C", "#B2182B")) +
scale_color_manual(values=c("#A06A2C", "#B2182B"))
p_col
metadata_colon_for_plot <- metadata_colon %>%
dplyr::filter(PSC_IBD %in% c(0,1)) %>%
mutate(Group=case_when(PSC_IBD == 1 ~ "ibd",
PSC_IBD == 0 ~ "no_ibd"))
metadata_colon_for_plot$Group <- factor(metadata_colon_for_plot$Group,levels = c("no_ibd","ibd"))
dys_limit <- max(metadata_colon_for_plot$dys_filtered_genus,na.rm = TRUE) + 0.6*max(metadata_colon_for_plot$dys_filtered_genus,na.rm = TRUE)
dys_min_limit <-  min(metadata_colon_for_plot$dys_filtered_genus)
p_col_dys_genus_ibd <- ggplot(metadata_colon_for_plot %>%
mutate(`MDI`=dys_filtered_genus)) +
geom_boxplot(aes(x=Group, y=`MDI`),
outliers = FALSE) +
geom_jitter(width = 0.3,height = 0,
aes(x=Group, y=`MDI`, color=Group,shape=Country),
size=1.5) +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0),
axis.ticks.x = element_line(size=0.3,color = "black"),
axis.ticks.y = element_line(size=0.3,color="black"),
axis.ticks.length = unit(4,"pt"),
panel.grid = element_blank()) +
ylim(dys_min_limit,dys_limit) +
scale_fill_manual(values=c("#A06A2C", "#B2182B")) +
scale_color_manual(values=c("#A06A2C", "#B2182B")) +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5))
p_col_dys_genus_ibd
pdf("../figures/clinical/MDI_colon_ibd.pdf",
height =5,width = 3)
p_il_dys_genus_ibd
dev.off()
pdf("../figures/clinical/MDI_colon_ibd.pdf",
height =5,width = 3)
p_col_dys_genus_ibd
dev.off()
nrow(metadata_colon_for_plot)
nrow(metadata_ileum_for_plot)
results_model <- pairwise.lm(
formula = "dys_filtered_genus ~ Group * Country",
factors=metadata_ileum_for_plot$Group,
data=metadata_ileum_for_plot)
knitr::kable(results_model[[1]],
digits=3,caption="Results of linear modeling")
nrow(metadata_ileum_for_plot)
results_model <- pairwise.lmer(
formula = "dys_filtered_genus ~ Group * Country + (1|PatientID)",
factors=metadata_colon_for_plot$Group,
data=metadata_colon_for_plot)
knitr::kable(results_model[[1]],
digits=3,caption="Results of linear modeling")
source("custom_functions.R")
path = "../../data/analysis_ready_data/ikem/"
asv_tab_ikem <- as.data.frame(fread(file.path(path,"asv_table_ikem.csv"),
check.names = FALSE))
taxa_tab_ikem <- as.data.frame(fread(file.path(path,"taxa_table_ikem.csv"),
check.names = FALSE))
metadata_ikem <- as.data.frame(fread(file.path(path,"metadata_ikem.csv"),
check.names = FALSE))
path = "../../data/clinical_data/"
cz <- read.csv(file.path(path,"clinical_metadata_cz.csv")) %>% dplyr::select(SampleID,PatientID,PSC_IBD,Group)
cz$PatientID <- as.character(cz$PatientID)
metadata_ikem <- merge(metadata_ikem,cz,by=c("SampleID", "Group"),all=TRUE)
path = "../../data/analysis_ready_data/norway/"
asv_tab_norway <- as.data.frame(fread(file.path(path,"asv_table_norway.csv"),
check.names = FALSE))
taxa_tab_norway <- as.data.frame(fread(file.path(path,"taxa_table_norway.csv"),
check.names = FALSE))
metadata_norway <- as.data.frame(fread(file.path(path,"metadata_norway.csv"),
check.names = FALSE))
path = "../../data/clinical_data/"
no <- read.csv(file.path(path,"clinical_metadata_no.csv")) %>% dplyr::select(SampleID,subjectid,IBD, Group)
clinical_metadata <- bind_rows(
cz %>% dplyr::mutate(PSC_IBD = case_when(
PSC_IBD == "0" ~ "no_ibd",
PSC_IBD == "1" ~ "ibd",
)) %>% `colnames<-`(c("SampleID","PatientID","IBD","Group")),
no %>% `colnames<-`(c("SampleID","PatientID","IBD","Group")) %>%
mutate(PatientID=paste0("NO_",PatientID)))
ileum_data <- merging_data(asv_tab_1=asv_tab_ikem,
asv_tab_2=asv_tab_norway,
taxa_tab_1=taxa_tab_ikem,
taxa_tab_2=taxa_tab_norway,
metadata_1=metadata_ikem,
metadata_2=metadata_norway,
segment="TI",Q="Q3")
ileum_asv_tab <- ileum_data[[1]]
ileum_taxa_tab <- ileum_data[[2]]
ileum_metadata <- ileum_data[[3]]
ileum_metadata <- merge(ileum_metadata,
clinical_metadata %>%
dplyr::select(-Group),
by=c("SampleID"), all.x = TRUE) %>%
dplyr::select(-PatientID,Group) %>%
dplyr::mutate(Group=IBD) %>% dplyr::select(-IBD)
colon_data <- merging_data(asv_tab_1=asv_tab_ikem,
asv_tab_2=asv_tab_norway,
taxa_tab_1=taxa_tab_ikem,
taxa_tab_2=taxa_tab_norway,
metadata_1=metadata_ikem,
metadata_2=metadata_norway,
segment="colon",Q="Q3")
colon_asv_tab <- colon_data[[1]]
colon_taxa_tab <- colon_data[[2]]
colon_metadata <- colon_data[[3]]
colon_metadata <- merge(colon_metadata,
clinical_metadata %>%
dplyr::select(-Group),
by=c("SampleID"), all.x = TRUE) %>%
dplyr::select(-PatientID,Group) %>%
dplyr::mutate(Group=IBD) %>% dplyr::select(-IBD)
# clinical metadata
metadata_clinical <- read.csv("../../data/clinical_data/clinical_metadata_cz.csv")
metadata_clinical$PatientID <- as.character(metadata_clinical$PatientID)
# DYSBIOSIS
metadata_dysbiosis <- read.csv("../../data/clinical_data/dysbiosis_metadata.csv") %>%
dplyr::filter(Country=="CZ")
# ALPHA DIVERSITY
metadata_alpha_ileum <- read.csv(
"../results/Q1/alpha_diversity/alpha_indices_terminal_ileum.csv") %>%
dplyr::filter(Country=="CZ")
metadata_alpha_colon <- read.csv(
"../results/Q1/alpha_diversity/alpha_indices_colon.csv") %>%
dplyr::filter(Country=="CZ")
metadata_alpha <- rbind(metadata_alpha_ileum,metadata_alpha_colon) %>%
mutate(PatientID=Patient) %>%
dplyr::select(-c(Patient, Group))
# MERGING
metadata_cz <- full_join(metadata_clinical, metadata_dysbiosis, by=c("SampleID","Matrix","PatientID","Group","Country"))
metadata_cz <- full_join(metadata_cz, metadata_alpha, by=c("SampleID","PatientID","Country"))
metadata_cz$Group <- factor(metadata_cz$Group,levels = c("healthy","pre_ltx","non-rPSC","rPSC"))
# clinical metadata
metadata_clinical <- read.csv("../../data/clinical_data/clinical_metadata_no.csv")
metadata_clinical %<>% mutate(PatientID=subjectid,
Matrix=segment) %>%
dplyr::select(-subjectid,-segment)
metadata_clinical$PatientID <- as.character(paste0("NO_",metadata_clinical$PatientID))
# DYSBIOSIS
metadata_dysbiosis <- read.csv("../../data/clinical_data/dysbiosis_metadata.csv") %>%
dplyr::filter(Country=="NO")  %>%
dplyr::select(-c(Patient))
# ALPHA DIVERSITY
metadata_alpha_ileum <- read.csv(
"../results/Q1/alpha_diversity/alpha_indices_terminal_ileum.csv") %>%
dplyr::filter(Country=="NO")
metadata_alpha_colon <- read.csv(
"../results/Q1/alpha_diversity/alpha_indices_colon.csv") %>%
dplyr::filter(Country=="NO")
metadata_alpha <- rbind(metadata_alpha_ileum,metadata_alpha_colon) %>%
mutate(PatientID=Patient) %>%
dplyr::select(-c(Patient, Group))
# MERGING
metadata_no <- full_join(metadata_clinical, metadata_dysbiosis, by=c("SampleID","Matrix","PatientID","Group","Country"))
metadata_no <- full_join(metadata_no, metadata_alpha, by=c("SampleID","PatientID","Country"))
metadata_no$Group <- factor(metadata_no$Group,levels = c("healthy","pre_ltx","non-rPSC","rPSC"))
metadata_cz %<>% dplyr::mutate(Calprotectin=Fecal.calprotectin,
AOM=AOM_score,
APRI=APRI_score,
FIB4=FIB4_score) %>%
dplyr::select(SampleID,Matrix,PatientID,Group,Country,Bilirubin,ALP,Calprotectin,
MAYO_PSC,AOM,APRI,FIB4,Platelets,AST,Creatinine,
Albumin,ALT,PSC_IBD,GGT,INR,Albumin,Nancy_max,eMAYO,MAYO_dai,
dys_unfiltered_asv,dys_unfiltered_genus,
dys_filtered_asv,dys_filtered_genus,
Observe,Shannon,Simpson,Pielou)
metadata_no %<>% dplyr::mutate(Platelets=TRC,
Creatinine=Kreatinin,
MAYO_PSC=Mayo_score,
AST=ASAT/60,
ALT=ALAT/60,
PSC_IBD=IBD,
Bilirubin=Bilirubin*17.1,
ALP=ALP/60,
Albumin=Albumin*10) %>%
dplyr::mutate(PSC_IBD = case_when(
PSC_IBD == "no_ibd" ~ "0",
PSC_IBD == "ibd" ~ "1",
TRUE ~ Group  # Keep other values as is
)) %>%
dplyr::select(SampleID,Matrix,PatientID,Group,Country,Bilirubin,ALP,Calprotectin,
MAYO_PSC,AOM,APRI,FIB4,Platelets,AST,Creatinine,
Albumin,ALT,PSC_IBD,
dys_unfiltered_asv,dys_unfiltered_genus,
dys_filtered_asv,dys_filtered_genus,
Observe,Shannon,Simpson,Pielou)
metadata_final <- merge(metadata_cz,metadata_no,all = TRUE)
metadata_final$Calprotectin[metadata_final$Calprotectin==">6000"] <- 6000
metadata_final$Calprotectin <- as.numeric(metadata_final$Calprotectin)
cz <- cz %>% dplyr::group_by(PSC_IBD,Group) %>%
distinct(PatientID, .keep_all = TRUE) %>%
count() %>% drop_na() %>%
dplyr::mutate(PSC_IBD = case_when(
PSC_IBD == "0" ~ "no_ibd",
PSC_IBD == "1" ~ "ibd",
)) %>% `colnames<-`(c("IBD","Group","n"))
no <- no %>% dplyr::group_by(IBD,Group) %>%
distinct(subjectid, .keep_all = TRUE) %>%
count() %>% drop_na()
# Summarize by IBD and Group
data <- bind_rows(cz, no) %>%
group_by(IBD, Group) %>%
summarise(n = sum(n), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = n) %>%
column_to_rownames("IBD") %>%
as.matrix()
chi_res <- chisq.test(data)
chi_res$expected
chi_res
data2 <- data %>% as.data.frame() %>%
dplyr::mutate(PSC=pre_ltx+rPSC) %>%
dplyr::select(PSC,`non-rPSC`) %>% as.matrix()
chi_res <- chisq.test(data2)
chi_res$expected
chi_res
data3 <- data %>% as.data.frame() %>%
dplyr::select(rPSC,`non-rPSC`) %>% as.matrix()
chi_res <- chisq.test(data3)
chi_res$expected
chi_res
segment="terminal_ileum"
path="../intermediate_files/rarecurves"
seq_depth_threshold <- 10000
load(file.path(path,"rarefaction_ileum.Rdata"))
prare <- ggrarecurve(obj=rareres,
factorNames="Country",
indexNames=c("Observe")) +
theme_bw() +
theme(axis.text=element_text(size=8), panel.grid=element_blank(),
strip.background = element_rect(colour=NA,fill="grey"),
strip.text.x = element_text(face="bold")) +
geom_vline(xintercept = seq_depth_threshold,
linetype="dashed",
color = "red") +
xlim(0, 20000)
prare
read_counts(ileum_asv_tab, line = c(5000,10000))
data_filt <- seq_depth_filtering(ileum_asv_tab,
ileum_taxa_tab,
ileum_metadata,
seq_depth_threshold = 10000)
filt_ileum_asv_tab <- data_filt[[1]]; alpha_ileum_asv_tab <- filt_ileum_asv_tab
filt_ileum_taxa_tab <- data_filt[[2]]; alpha_ileum_taxa_tab <- filt_ileum_taxa_tab
filt_ileum_metadata <- data_filt[[3]]; alpha_ileum_metadata <- filt_ileum_metadata
seq_step <- dim(filt_ileum_asv_tab)[1]
read_counts(filt_ileum_asv_tab,line = c(5000,10000))
data_filt <- nearzerovar_filtering(filt_ileum_asv_tab,
filt_ileum_taxa_tab,
filt_ileum_metadata)
filt_ileum_asv_tab <- data_filt[[1]]
filt_ileum_taxa_tab <- data_filt[[2]]
nearzero_step <- dim(filt_ileum_asv_tab)[1]
read_counts(filt_ileum_asv_tab,line = c(5000,10000))
final_counts_filtering(ileum_asv_tab,
filt_ileum_asv_tab,
filt_ileum_metadata,
seq_step, 0, nearzero_step) %>% `colnames<-`("Count")
path = "../results/Q3/alpha_diversity"
# Construct MPSE object
alpha_ileum_metadata$Sample <- alpha_ileum_metadata$SampleID
ileum_mpse <- as.MPSE(construct_phyloseq(alpha_ileum_asv_tab,
alpha_ileum_taxa_tab,
alpha_ileum_metadata))
ileum_mpse %<>% mp_rrarefy(raresize = 10000,seed = 123)
# Calculate alpha diversity - rarefied counts
ileum_mpse %<>% mp_cal_alpha(.abundance=RareAbundance, force=TRUE)
alpha_div_plots <- list()
# preparing data frame
alpha_data <- data.frame(SampleID=ileum_mpse$Sample.x,
Observe=ileum_mpse$Observe,
Shannon=ileum_mpse$Shannon,
Simpson=ileum_mpse$Simpson,
Pielou=ileum_mpse$Pielou,
Group=ileum_mpse$Group,
Country=ileum_mpse$Country,
Patient=ileum_mpse$Patient)
write.csv(alpha_data,file.path(path,paste0("alpha_indices_",segment,".csv")),
row.names = FALSE)
p_boxplot_alpha <- alpha_diversity_countries(alpha_data,show_legend = FALSE)
# save the results
alpha_div_plots[[paste(segment,"Country")]] <- p_boxplot_alpha
# see the results
p_boxplot_alpha
pdf("../figures/Q3/alpha_diversity_terminal_ileum.pdf",
height =4,width = 6)
p_boxplot_alpha
dev.off()
path = "../results/Q3/alpha_diversity"
alpha_data <- read.csv(file.path(path,paste0("alpha_indices_",segment,".csv")))
results_model <- pairwise.lm(formula = "Observe ~ Group * Country",
factors=alpha_data$Group,
data=alpha_data)
# check interaction
if (!is.data.frame(results_model)){
results_model_observe <- results_model[[1]]
results_model_observe_emeans <- results_model[[2]]
} else {
results_model_observe <- results_model
results_model_observe_emeans <- NA
}
# save the results
pc_observed <- list();
pc_observed[[segment]] <- results_model_observe
# see the results
knitr::kable(results_model_observe,digits = 3,
caption = "Raw results of linear model of richness estimation.")
knitr::kable(results_model_observe_emeans,digits = 3,
caption = "Raw results of independent country analysis")
results_model <- pairwise.lm(formula = "Shannon ~ Group * Country",
factors=alpha_data$Group,
data=alpha_data)
# check interaction
if (!is.data.frame(results_model)){
results_model_shannon <- results_model[[1]]
results_model_shannon_emeans <- results_model[[2]]
} else {
results_model_shannon <- results_model
results_model_shannon_emeans <- NA
}
# save the results
pc_shannon <- list();
pc_shannon[[segment]] <- as.data.frame(results_model_shannon)
# see the results
knitr::kable(results_model_shannon,digits = 3,
caption = "Raw results of linear model of Shannon estimation.")
knitr::kable(results_model_shannon_emeans,digits = 3,
caption = "Raw results of independent country analysis")
results_model <- pairwise.lm(formula = "Simpson ~ Group * Country",
factors=alpha_data$Group,
data=alpha_data)
# check interaction
if (!is.data.frame(results_model)){
results_model_simpson <- results_model[[1]]
results_model_simpson_emeans <- results_model[[2]]
} else {
results_model_simpson <- results_model
results_model_simpson_emeans <- NA
}
# save the results
pc_simpson <- list();
pc_simpson[[segment]] <- as.data.frame(results_model_simpson)
# see the results
knitr::kable(results_model_simpson,digits = 3,
caption = "Raw results of linear model of Simpson estimation.")
knitr::kable(results_model_simpson_emeans,digits = 3,
caption = "Raw results of independent country analysis")
results_model <- pairwise.lm(formula = "Pielou ~ Group * Country",
factors=alpha_data$Group,
data=alpha_data)
# check interaction
if (!is.data.frame(results_model)){
results_model_pielou <- results_model[[1]]
results_model_pielou_emeans <- results_model[[2]]
} else {
results_model_pielou <- results_model
results_model_pielou_emeans <- NA
}
# save the results
pc_pielou <- list();
pc_pielou[[segment]] <- as.data.frame(results_model_pielou)
# see the results
knitr::kable(results_model_pielou,digits = 3,
caption = "Raw results of linear model of Pielou estimation.")
knitr::kable(results_model_pielou_emeans,digits = 3,
caption = "Raw results of independent country analysis")
alpha_list <- list(
Richness=pc_observed[[segment]],
Shannon=pc_shannon[[segment]])
write.xlsx(alpha_list,
file = file.path(path,paste0("alpha_diversity_results_",segment,".xlsx")))
level="genus"
path = "../results/Q3/beta_diversity"
pairwise_aitchison_raw <- list()
pca_plots_list <- list()
# Aggregation
genus_data <- aggregate_taxa(ileum_asv_tab,
ileum_taxa_tab,
taxonomic_level=level,
names=TRUE)
# Filtration
filt_data <- filtering_steps(genus_data[[1]],
genus_data[[2]],
ileum_metadata,
seq_depth_threshold=10000)
filt_ileum_genus_tab <- filt_data[[1]]
filt_ileum_genus_taxa <- filt_data[[2]]
filt_ileum_metadata <- filt_data[[3]]
pairwise_df <- filt_ileum_genus_tab %>% column_to_rownames("SeqID") %>% t()
# main effect
pp_main <- pairwise.adonis(pairwise_df,
filt_ileum_metadata$Group,
covariate = filt_ileum_metadata$Country, sim.method = "robust.aitchison", p.adjust.m="BH")
# interaction
pp_int <- pairwise.adonis(pairwise_df,filt_ileum_metadata$Group,covariate = filt_ileum_metadata$Country, interaction = TRUE, sim.method = "robust.aitchison", p.adjust.m="BH")
# tidy the results
pp_factor <- pp_main[[1]]
pp_cov <- pp_main[[2]]
pp_fac.cov <- pp_int[[3]]
cols <- c("pairs","Df","SumsOfSqs", "F.Model","R2","p.value", "p.adjusted", "sig")
colnames(pp_factor) <- cols; colnames(pp_cov) <- cols; colnames(pp_fac.cov) <- cols;
# save raw results
pairwise_aitchison_raw[[paste(level, segment)]] <- rbind(pp_factor,pp_cov,pp_fac.cov)
# see the results
knitr::kable(pp_factor,digits = 3,caption = "PERMANOVA, GROUP separation")
knitr::kable(pp_cov,digits = 3,caption = "PERMANOVA, COUNTRY separation")
knitr::kable(pp_fac.cov,digits = 3,caption = "PERMANOVA, INTERACTION GROUP:Country")
interaction_sig <- pp_fac.cov$pairs[pp_fac.cov$p.adjusted < 0.1]
if (length(interaction_sig)>0){
for (i in 1:length(interaction_sig)){
group1 <- unlist(strsplit(interaction_sig[i],split = " vs "))[1]
group2 <- unlist(strsplit(interaction_sig[i],split = " vs "))[2]
group2 <- unlist(strsplit(group2,split = " : "))[1]
result_list <- adonis_postanalysis(x=pairwise_df,
factors = filt_ileum_metadata$Group,
covariate = filt_ileum_metadata$Country,
group1 = group1,
group2 = group2)
print(result_list)
}
}
p <- pca_plot_custom(filt_ileum_genus_tab,
filt_ileum_genus_taxa,
filt_ileum_metadata,
show_boxplots = TRUE,
variable = "Group", size=3, show_legend=FALSE)
# save the results
pca_plots_list[[paste(segment,level,"custom")]] <- p
# see the results
p
pdf("../figures/Q3/beta_diversity_terminal_ileum.pdf",
height =5,width = 5)
p
dev.off()
metadata_clinical <- metadata_final
metadata_clinical$PatientID <- as.character(metadata_clinical$PatientID)
metadata_colon_pca <- merge(filt_colon_metadata %>% dplyr::mutate(PatientID=Patient),metadata_clinical[,c("SampleID",variables)],by="SampleID",all.x=TRUE) %>% dplyr::select(SampleID, Group, Country,variables,PatientID)
level="genus"
path = "../results/Q3/beta_diversity"
genus_data <- aggregate_taxa(colon_asv_tab,
colon_taxa_tab,
taxonomic_level=level,
names=TRUE)
filt_data <- filtering_steps(genus_data[[1]],
genus_data[[2]],
colon_metadata,
seq_depth_threshold=10000)
filt_colon_genus_tab <- filt_data[[1]]
filt_colon_genus_taxa <- filt_data[[2]]
filt_colon_genus_metadata <- filt_data[[3]]
metadata_clinical <- metadata_final
metadata_clinical$PatientID <- as.character(metadata_clinical$PatientID)
metadata_colon_pca <- merge(filt_colon_metadata %>% dplyr::mutate(PatientID=Patient),metadata_clinical[,c("SampleID",variables)],by="SampleID",all.x=TRUE) %>% dplyr::select(SampleID, Group, Country,variables,PatientID)
segment="colon"
data_filt <- seq_depth_filtering(colon_asv_tab,
colon_taxa_tab,
colon_metadata,
seq_depth_threshold = 10000)
filt_colon_asv_tab <- data_filt[[1]]; alpha_colon_asv_tab <- filt_colon_asv_tab
filt_colon_taxa_tab <- data_filt[[2]]; alpha_colon_taxa_tab <- filt_colon_taxa_tab
filt_colon_metadata <- data_filt[[3]]; alpha_colon_metadata <- filt_colon_metadata
seq_step <- dim(filt_colon_asv_tab)[1]
data_filt <- nearzerovar_filtering(filt_colon_asv_tab,
filt_colon_taxa_tab,
filt_colon_metadata)
filt_colon_asv_tab <- data_filt[[1]]
filt_colon_taxa_tab <- data_filt[[2]]
nearzero_step <- dim(filt_colon_asv_tab)[1]
1
